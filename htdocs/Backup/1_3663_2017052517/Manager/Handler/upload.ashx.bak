<%@ WebHandler Language="C#" Class="NSW.Web.Manager.Handler.upload" %>

using System;
using System.Collections.Generic;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Text;
using NSW.Entities;
using System.Data;
using BlueCrystal.Data;
using System.Xml;
using NSW.Utls;
using System.Collections;
using Newtonsoft.Json;
using NSW.Admin.Tools;
using System.Text.RegularExpressions;

namespace NSW.Web.Manager.Handler
{
    public class upload : IHttpHandler, System.Web.SessionState.IRequiresSessionState
    {
        public void ProcessRequest(HttpContext context)
        {
            //检查来源
            if (!CheckPostSource())
            {
                context.Response.Write(NSW.ORes.Error.SuspiciousOfPostingSourceAndBeIgnored);
                return;
            }
            if (!NSW.BLL.Admin.CheckPassport() && IsFlash(true))
            {
                if (!ColumnTools.CheckPermissionID(context.Request.Form["PermissionID"]))
                {
                    context.Response.Write("您尚未登录，不能操作！");
                    return;
                }
            }
            string action = context.Request.QueryString["action"];
            switch (action)
            {
                case "SaveHttpPostedFile": UploadTools.SaveHttpPostedFile(); break;
                case "SavePictureHttpPostedFile": UploadTools.SavePictureHttpPostedFile(); break;
                case "SaveFilesHttpPostedFile": UploadTools.SaveFilesHttpPostedFile(); break;
                default:
                    UploadTools.showError("无效请求！");
                    break;
            }
        }

        private bool IsFlash(bool ckSession)
        {
            HttpContext Content = HttpContext.Current;
            ckSession = ckSession ? Content.Session.Count < 2 : !ckSession;
            string userAgent = Content.Request.UserAgent;
            if (string.IsNullOrEmpty(userAgent)) return false;
            return ckSession && (userAgent.Contains("Shockwave Flash") || userAgent.Contains("Adobe Flash Player")) && Content.Request.ContentType.Contains("multipart/form-data;");
        }
        public bool CheckPostSource()
        {
            string str;
            bool flag = false;
            string host = HttpContext.Current.Request.Url.Host;
            if (HttpContext.Current.Request.UrlReferrer == null)
            {
                str = "";
                if (IsFlash(false))
                {
                    return true;
                }
            }
            else
            {
                str = HttpContext.Current.Request.UrlReferrer.ToString();
            }
            if (str.Length > 0)
            {
                str = str.ToLower();
                host = host.ToLower();
                if (str.Substring(7, host.Length).Equals(host))
                {
                    flag = true;
                }
            }
            return flag;
        }

        public bool IsReusable
        {
            get
            {
                return false;
            }
        }
    }
}