using System;
using System.Collections.Generic;
using System.Web;
using System.Text;
using System.Data;


//[Tools("my","MyTools_")]
public class MyTools_
{
    #region 头部
    private static readonly string[][] HeaderTemps = new string[][]{
        new string[]{
        "",
            "<a href=\"{url}\" title=\"{title}\"{class_}{rel}{target}>{title}</a>",
        ""
        }
    };
    private static string HeaderCacheKey = "tbMune Header";
    public static string GetHeader()
    {
        string Header = NSW.ComUtls.GetCache(HeaderCacheKey) as string;
        if (string.IsNullOrEmpty(Header))
        {
            int level = 0;
            StringBuilder builder = new StringBuilder();
            DataTable dt = XMLTool.GetXML(HttpContext.Current.Server.MapPath("/") + "/Config/Mune.xml");
            builder.Append(GetMune(dt, 1, 0, HeaderTemps, level));
            Header = builder.ToString();
            NSW.ComUtls.AddCache(HeaderCacheKey, Header, DateTime.Now.AddDays(5));
        }
        return Header;
    }
    #endregion

    #region 底部
    private static readonly string[][] FooterTemps = new string[][]{
        new string[]{
        "",
            "<dl{class_}><dt><a href=\"{url}\" title=\"{title}\"{rel}{target}>{title}</a></dt>{content}</dl>",
        ""
        },
        new string[]{
            "<dd>\r\n",
                "<a href=\"{url}\" title=\"{title}\"{class_}{rel}{target}>{title}</a>",
            "</dd>\r\n"
        }
    };
    private static string FooterCacheKey = "tbMune Footer";
    public static string GetFooter()
    {
        string Footer = NSW.ComUtls.GetCache(FooterCacheKey) as string;
        if (string.IsNullOrEmpty(Footer))
        {
            int level = 0;
            StringBuilder builder = new StringBuilder();
            DataTable dt = XMLTool.GetXML(HttpContext.Current.Server.MapPath("/") + "/Config/Mune.xml");
            builder.Append(GetMune(dt, 2, 0, FooterTemps, level));
            Footer = builder.ToString();
            NSW.ComUtls.AddCache(FooterCacheKey, Footer, DateTime.Now.AddDays(5));
        }
        return Footer;
    }
    #endregion


	#region 底部
    private static readonly string[][] FooterTemps_ = new string[][]{
        new string[]{
        "",
            "<p><b><a href=\"{url}\" title=\"{title}\"{rel}{target}>{title}</a></b>{content}</p>",
        ""
        },
        new string[]{
            "",
                "<a href=\"{url}\" title=\"{title}\"{rel}{class_}{target}>{title}</a>",
            ""
        }
    };
    private static string FooterCacheKey_ = "tbMune Footer_";
    public static string GetFooter01()
    {
        string Footer = NSW.ComUtls.GetCache(FooterCacheKey_) as string;
        if (string.IsNullOrEmpty(Footer))
        {
            int level = 0;
            StringBuilder builder = new StringBuilder();
            DataTable dt = XMLTool.GetXML(HttpContext.Current.Server.MapPath("/") + "/Config/Mune.xml");
            builder.Append(GetMune(dt, 2, 0, FooterTemps_, level));
            Footer = builder.ToString();
            NSW.ComUtls.AddCache(FooterCacheKey_, Footer, DateTime.Now.AddDays(5));
        }
        return Footer;
    }
    #endregion

    #region 头部底部通用方法
    /// <summary>
    /// 通用方法
    /// </summary>
    /// <param name="dt"></param>
    /// <param name="MenuType"></param>
    /// <param name="parentid"></param>
    /// <param name="arrs"></param>
    /// <param name="level"></param>
    /// <returns></returns>
    private static string GetMune(DataTable dt, int MenuType, int parentid, string[][] arrs, int level)
    {
        string[] temps = null;
        if (level >= arrs.Length || (temps = arrs[level]).Length < 3)
        {
            return string.Empty;
        }
        level = level + 1;

        DataRow[] rowArray = dt.Copy().Select("MenuType = " + MenuType + " and Enable=1 and ParentID=" + parentid, "Order ASC");
        StringBuilder sb = new StringBuilder();
        if (rowArray.Length > 0)
        {
            sb.Append(temps[0]);
            bool isSub = temps[1].Contains("{content}");
            foreach (DataRow row in rowArray)
            {
                string content = NVTools.Tools.GetMuneUrl(row, temps[1]);
                //sb.Append(content);
                sb.Append(!isSub ? content : content.Replace("{content}", GetMune(dt, MenuType, NSW.ComUtls.ParseInt(row["OID"].ToString(), -1), arrs, level)));
            }
            sb.Append(temps[2]);
        }
        return sb.ToString();
    }
    #endregion

}